{"version":3,"file":"static/js/511.af071ec9.chunk.js","mappings":"iKACA,G,QAAwE,6BAAxE,EAAgH,gC,4BCiBhH,EAfqB,SAAH,GAAiC,IAA5BA,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAASC,GAAK,YAKpCC,EAAWF,EAAKG,SAAWH,EAAKI,MAEpC,OACI,iCACI,+CAAcL,GAAWE,GAAK,IAAEI,UAAWH,EAAY,IAAMI,EAAe,MAC3EJ,IAAY,kBAAMG,UAAWC,EAAgB,UAAEN,EAAKI,MAAK,SAGtE,C,wHCfA,EAAgC,mCAAhC,EAAqF,qCAArF,EAAqI,8B,+FCArI,EAAsB,2B,SCiCtB,EA/BsB,SAAH,GAAoC,IAA/BG,EAAW,EAAXA,YAAYC,EAAY,EAAZA,aAEhC,GAA8BC,EAAAA,EAAAA,WAAS,GAAK,eAAvCC,EAAQ,KAAEC,EAAW,KAC1B,GAA0BF,EAAAA,EAAAA,UAASF,GAAY,eAA1CK,EAAM,KAAEC,EAAS,MAEtBC,EAAAA,EAAAA,YAAU,WACND,EAAUN,EACd,GAAG,CAACA,IAaJ,OACI,qCAAMG,GAGA,kBAAOK,WAAW,EAAMC,OAAQ,kBAZtCL,EAAYD,GAAW,QACvBF,EAAaI,EAWmD,EACnDK,SAAU,SAACC,GAAC,OAVR,SAACA,GAClBL,EAAUD,EAASM,EAAEC,cAAcC,MACvC,CAQkCC,CAAeH,EAAE,EAAEE,MAAOR,KAFpD,gBAAKP,UAAWC,EAAWgB,QAAS,WAdxCX,EAAYD,GAAW,EAcyC,EAAC,SAAoB,IAAlBE,EAAOW,OAAe,iCAAUX,MAM3G,E,UCKA,EA7BoB,SAAH,GAAuC,IAAlCY,EAAO,EAAPA,QAAQZ,EAAM,EAANA,OAAOJ,EAAY,EAAZA,aAEjC,OACI,8BACKgB,GACG,iCACI,gBAAKnB,UAAWC,EAAoB,UAChC,gBAAKmB,IAAKC,EAAQC,IAAK,YAG3B,iBAAKtB,UAAWC,EAAsB,WAClC,gBAAKmB,IAAKD,EAAQI,OAAOC,OAASC,EAAcH,IAAK,gBACrD,iBAAKtB,UAAWC,EAAe,WAC3B,yCAAiBkB,EAAQO,aACzB,wCAAgBP,EAAQQ,YACxB,2EAAgBR,EAAQS,8BACxB,yCAAiBT,EAAQU,SAASC,aAI1C,SAAC,EAAa,CAAC5B,YAAaK,EAAQJ,aAAcA,QAGtD,SAAC4B,EAAA,EAAS,KAI1B,EClCA,EAA0B,8BCA1B,EAA0B,sBAA1B,EAAgE,4BAAhE,EAAmG,mBAAnG,EAAiI,uBAAjI,EAAuK,2BAAvK,EAAyM,mBC2BzM,EAxBa,SAACnC,GACV,OACI,iBAAKI,UAAWC,EAAc,WAC1B,iBAAKD,UAAWC,EAAoB,WAChC,gBAAKmB,IAAKxB,EAAMoC,IAAKV,IAAK,YAC1B,uBAAI1B,EAAMqC,WAEd,4BACI,gBAAKjC,UAAWC,EAAW,SAAEL,EAAMsC,QACnC,gBAAKlC,UAAWC,EAAe,SAC1BL,EAAMuC,cAIf,iBAAKnC,UAAWC,EAAmB,WAC/B,wCACA,2CAGJ,iBAAKD,UAAWC,EAAYgB,QAASrB,EAAMqB,QAAQ,oBAAUrB,EAAMwC,gBAG/E,ECzBA,EAA2B,iC,uCCKrBC,GAAcC,EAAAA,EAAAA,GAAiB,IAYrC,GAFuBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,cAAjBD,EATJ,SAAC3C,GAChB,OACQ,kBAAMI,UAAWC,EAAgBwC,SAAU7C,EAAM8C,aAAa,WAC1D,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,EAAcZ,KAAM,cAAea,SAAU,CAACC,EAAAA,EAAUV,GAAetB,MAAOnB,EAAMoD,WACtG,uCAGhB,ICUA,EAnBqB,SAACpD,GAElB,IAAMqD,EAAUrD,EAAMsD,MAAMC,KAAI,SAACC,EAAEC,GAAC,OAChC,SAAC,EAAI,CAAClB,QAASiB,EAAEjB,QAASF,KAAMmB,EAAEnB,KAAMC,KAAMkB,EAAElB,KAAME,WAAYgB,EAAEhB,WAAYJ,IAAKoB,EAAEpB,KAAUqB,EAAI,IAMzG,OACI,iBAAKrD,UAAWC,EAAc,WAC1B,sCACA,SAAC,EAAc,CAAC+C,QAASpD,EAAMoD,QAASP,SAPjC,SAAC1B,GACZnB,EAAM0D,cAAcvC,EAAMwC,YAC9B,IAMSN,IAIb,E,UCNA,GAJ6BO,EAAAA,EAAAA,KAPP,SAACC,GACnB,MAAO,CACHP,MAAOO,EAAMC,YAAYR,MACzBF,QAASS,EAAMC,YAAYH,YAEnC,GAEsD,CAACD,cAAAA,EAAAA,IAA1BE,CAA0CG,GCGvE,EAVgB,SAAH,GAAuC,IAAlCxC,EAAO,EAAPA,QAAQZ,EAAM,EAANA,OAAOJ,EAAY,EAAZA,aAE7B,OACI,iCACI,SAAC,EAAW,CAACgB,QAASA,EAASZ,OAAQA,EAAQJ,aAAcA,KAC7D,SAAC,EAAoB,MAGjC,E,wCCJayD,EAAmB,SAAChE,GAE7B,IAAOiE,GAAUC,EAAAA,EAAAA,MAAVD,OAkBP,OAhBApD,EAAAA,EAAAA,YAAU,WACN,IAAIsD,GAAY,EAUhB,OATKA,IACGF,GACAjE,EAAMoE,iBAAiBH,GACvBjE,EAAMqE,eAAeJ,KAErBjE,EAAMoE,iBAAiBpE,EAAMsE,YAC7BtE,EAAMqE,eAAerE,EAAMsE,cAG5B,WACHH,GAAY,CAChB,CACJ,GAAG,CAACF,EAAQjE,EAAMsE,cAGd,+BACI,SAAC,EAAO,CAAC/C,QAASvB,EAAMuB,QAASZ,OAAQX,EAAMW,OAAQJ,aAAcP,EAAMO,gBAGvF,EAcA,GAAegE,EAAAA,EAAAA,KACXX,EAAAA,EAAAA,KAVkB,SAACC,GAAK,MAAM,CAC9BtC,SAASiD,EAAAA,EAAAA,IAAWX,GACpBlD,QAAQ8D,EAAAA,EAAAA,IAAiBZ,GACzBS,YAAYI,EAAAA,EAAAA,IAAcb,GAC1Bc,QAAQC,EAAAA,EAAAA,IAAUf,GACrB,GAK4B,CAACO,iBAAAA,EAAAA,GAAkBC,eAAAA,EAAAA,GAAgB9D,aAAAA,EAAAA,KAC5DsE,EAAAA,EAFJ,CAGEb,E,kJC/CEc,EAA6B,SAACjB,GAAK,MAAM,CACzCc,OAAQd,EAAMkB,KAAKJ,OACtB,EAEYE,EAAmB,SAACG,GAAe,IACxCC,EAAiB,qGAIlB,OAJkB,8BACnB,WACI,OAAIC,KAAKlF,MAAM2E,QACR,SAACK,GAAS,UAAKE,KAAKlF,SADG,SAAC,KAAQ,CAACmF,GAAI,UAEhD,KAAC,EAJkB,CAASC,EAAAA,WAO9B,OAAOxB,EAAAA,EAAAA,IAAQkB,EAARlB,CAAoCqB,EAC/C,C","sources":["webpack://igor-app/./src/Components/Common/TextareaForm.module.css?1a47","Components/Common/TextareaForm.jsx","webpack://igor-app/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileStatus/ProfileStatus.module.css","Components/Profile/ProfileStatus/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://igor-app/./src/Components/Profile/MyPosts/CreateMyPost/CreateMyPost.module.css?fad0","webpack://igor-app/./src/Components/Profile/MyPosts/Post/Post.module.css?54ab","Components/Profile/MyPosts/Post/Post.jsx","webpack://igor-app/./src/Components/Profile/MyPosts/CreateMyPost/CreatePostForm.module.css?4a2d","Components/Profile/MyPosts/CreateMyPost/CreatePostForm.jsx","Components/Profile/MyPosts/CreateMyPost/CreateMyPost.jsx","Components/Profile/MyPosts/CreateMyPost/SuperMyPostContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","HOC/AuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"TextareaForm_formControl__F4Fe6\",\"error\":\"TextareaForm_error__j-1+o\",\"spanError\":\"TextareaForm_spanError__M+rTe\"};","import React from \"react\";\r\nimport style from './TextareaForm.module.css'\r\n\r\nconst TextareaForm = ({input, meta, ...props}) => {\r\n    /*не работало до деструктуризации, и не выдавало никаких ошибок...деструктуризировал input и propsЫ и передал их в\r\n     textarea и щас все норм, нужно было передать их в textarea а не просто {...props}*/\r\n    {/*{...input} {...props} className={style.error + ' ' + style.error}*/\r\n    }\r\n    let hasError = meta.touched && meta.error\r\n    /*meta.error будет показывать сообщение из валидатора повешенного на форму*/\r\n    return (\r\n        <>\r\n            <textarea {...input} {...props} className={hasError ? (' ' + style.error) : ''}/>\r\n            {hasError && <span className={style.spanError}>{meta.error}*</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TextareaForm","// extracted by mini-css-extract-plugin\nexport default {\"contentUserBg\":\"ProfileInfo_contentUserBg__nE3m7\",\"contentUserDesc\":\"ProfileInfo_contentUserDesc__NqCuB\",\"userDesc\":\"ProfileInfo_userDesc__pjrCF\"};","// extracted by mini-css-extract-plugin\nexport default {\"div\":\"ProfileStatus_div__68piY\"};","import React, {useEffect, useState} from 'react';\r\nimport style from './ProfileStatus.module.css'\r\n\r\nconst ProfileStatus = ({statusOuter,updateStatus}) => {\r\n\r\n    let [editMode, setEditMode] = useState(true)\r\n    let [status, setStatus] = useState(statusOuter)\r\n\r\n    useEffect(() => {\r\n        setStatus(statusOuter)\r\n    }, [statusOuter]);\r\n    let activateEditMode = () => {\r\n        setEditMode(editMode = true)\r\n    }\r\n    let deactivateEditMode = () => {\r\n        setEditMode(editMode = false)\r\n        updateStatus(status)\r\n    }\r\n    let onStatusChange = (e) => {\r\n        setStatus(status = e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <>  {!editMode\r\n            ?\r\n            <div className={style.div} onClick={() => activateEditMode()}>{status.length === 0 ? 'Пусто' : status}</div>\r\n            : <input autoFocus={true} onBlur={() => deactivateEditMode()}\r\n                     onChange={(e) => onStatusChange(e)} value={status}/>}\r\n            {/*без автофокуса не сработает onBlur(выход из фокуса) так как ему нужен фокус)*/}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport style from './ProfileInfo.module.css'\r\nimport userBg from \"../../../img/backgroundMainUser.jpg\";\r\nimport Preloader from \"../../Common/Preloader\";\r\nimport defaultPhoto from '../../../img/images.png'\r\nimport ProfileStatus from './../ProfileStatus/ProfileStatus'\r\nimport {updateStatus} from \"../../../Redux/ProfilePageReducer\";\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n\r\n    return (\r\n        <>\r\n            {profile ?\r\n                <>\r\n                    <div className={style.contentUserBg}>\r\n                        <img src={userBg} alt={'logo'}></img>\r\n                    </div>\r\n\r\n                    <div className={style.contentUserDesc}>\r\n                        <img src={profile.photos.small || defaultPhoto} alt={\"avatarUser\"}/>\r\n                        <div className={style.userDesc}>\r\n                            <span>Full Name:{profile.fullName}</span>\r\n                            <span>About me:{profile.aboutMe}</span>\r\n                            <span>Работаю: {profile.lookingForAJobDescription}</span>\r\n                            <span>Contacts: {profile.contacts.vk}</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <ProfileStatus statusOuter={status} updateStatus={updateStatus}/>\r\n                </>\r\n                :\r\n                <Preloader/>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CreateMyPost_wrapper__+sSH0\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Post_wrapper__EjFG-\",\"aboutUserPost\":\"Post_aboutUserPost__Xe5jl\",\"date\":\"Post_date__sjW8z\",\"textPost\":\"Post_textPost__CVi1k\",\"userResponse\":\"Post_userResponse__i7Oh6\",\"like\":\"Post_like__49Sr5\"};","import React from 'react';\r\nimport style from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.aboutUserPost}>\r\n                <img src={props.img} alt={'avatar'}/>\r\n                <p>{props.name}</p>\r\n            </div>\r\n            <div>\r\n                <div className={style.date}>{props.date}</div>\r\n                <div className={style.textPost}>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.userResponse}>\r\n                <button>Delete</button>\r\n                <button>Answer</button>\r\n            </div>\r\n\r\n            <div className={style.like} onClick={props.onClick}>&#9825; {props.likesCount}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"sendPost\":\"CreatePostForm_sendPost__07omU\"};","import React from 'react';\r\nimport style from './CreatePostForm.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../Utils/Validators\";\r\nimport TextareaForm from \"../../../Common/TextareaForm\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst CreatePost = (props) => {\r\n    return (\r\n            <form className={style.sendPost} onSubmit={props.handleSubmit}>\r\n                <Field component={TextareaForm} name={'newPostText'} validate={[required, maxLength10]}  value={props.newText}/>\r\n                <button>Send</button>\r\n            </form>\r\n    );\r\n};\r\n\r\nconst CreatePostForm = reduxForm({form: 'CreatePost'})(CreatePost)\r\n\r\nexport default CreatePostForm;","import React from 'react';\r\nimport style from './CreateMyPost.module.css'\r\nimport Post from \"../Post/Post\";\r\nimport CreatePostForm from \"./CreatePostForm\";\r\n\r\nconst CreateMyPost = (props) => {\r\n\r\n    const newPost = props.posts.map((p,i) =>\r\n        <Post message={p.message} name={p.name} date={p.date} likesCount={p.likesCount} img={p.img} key={i}/> )\r\n\r\n    let onSubmit = (value) => {\r\n        props.actionAddPost(value.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <h1>My Posts</h1>\r\n            <CreatePostForm newText={props.newText} onSubmit={onSubmit}/>\r\n            {newPost}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default CreateMyPost;","import CreateMyPost from \"./CreateMyPost\";\r\nimport {actionAddPost} from \"../../../../Redux/ProfilePageReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (store) => {\r\n    return {\r\n        posts: store.profilePage.posts,\r\n        newText: store.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst SuperMyPostContainer = connect(mapStateToProps, {actionAddPost})(CreateMyPost)\r\n//connect(вызывает две эти функции)(и закидывает их в эту компоненту)\r\n/* главная особенность connect он получает контекстные данные! и рендерит! рендерит при изменении*/\r\n\r\nexport default SuperMyPostContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport SuperMyPostContainer from \"./MyPosts/CreateMyPost/SuperMyPostContainer\";\r\nimport {updateStatus} from \"../../Redux/ProfilePageReducer\";\r\n\r\nconst Profile = ({profile,status,updateStatus}) => {\r\n\r\n    return (\r\n        <>\r\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus}/>\r\n            <SuperMyPostContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n\r\n","import Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatusThunk, profilePageThunk, updateStatus} from \"../../Redux/ProfilePageReducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport React, {useEffect} from \"react\";\r\nimport {withAuthRedirect} from \"../../HOC/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getAuthUserId, getIsAuth, getProfile, getStatusProfile} from \"../../Redux/ProfileSelector\";\r\n\r\nexport const ProfileContainer = (props) => {\r\n\r\n    const {userId} = useParams()\r\n\r\n    useEffect(() => {\r\n        let clearHook = false\r\n        if (!clearHook) {\r\n            if (userId) {\r\n                props.profilePageThunk(userId)\r\n                props.getStatusThunk(userId)\r\n            } else {\r\n                props.profilePageThunk(props.authUserId)\r\n                props.getStatusThunk(props.authUserId)\r\n            }\r\n        }\r\n        return function () {\r\n            clearHook = true\r\n        }\r\n    }, [userId, props.authUserId])\r\n\r\n    return (\r\n        <>\r\n            <Profile profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//===== изначальные пропсы <Profile profile={props.profile} status={props.status} updateStatus={props.updateStatus} userId={userId}/>\r\n\r\nlet mapStateToProps = (store) => ({\r\n    profile: getProfile(store),\r\n    status: getStatusProfile(store),\r\n    authUserId: getAuthUserId(store),\r\n    isAuth: getIsAuth(store),\r\n}) // на каждое изменение state запускается функция mapStateToProps и проверяет не изменилось ли что то\r\n// у нас полно изменений в store поэтому очень важно, точечно выбирать данные которые будут закинуты в mapStateToProps\r\n// в react очень дорогая перерисовка!\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {profilePageThunk, getStatusThunk, updateStatus}),\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n//мы оборачиваем ProfileContainer => withAuthRedirect затем результат оборачиваем => connect\r\n\r\n","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (store) => ({\r\n    isAuth: store.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component{\r\n      render(){\r\n          if(!this.props.isAuth) return <Navigate to={'/login'}/>\r\n          return <Component {...this.props}/>\r\n      }\r\n  }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}"],"names":["input","meta","props","hasError","touched","error","className","style","statusOuter","updateStatus","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onBlur","onChange","e","currentTarget","value","onStatusChange","onClick","length","profile","src","userBg","alt","photos","small","defaultPhoto","fullName","aboutMe","lookingForAJobDescription","contacts","vk","Preloader","img","name","date","message","likesCount","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","TextareaForm","validate","required","newText","newPost","posts","map","p","i","actionAddPost","newPostText","connect","store","profilePage","CreateMyPost","ProfileContainer","userId","useParams","clearHook","profilePageThunk","getStatusThunk","authUserId","compose","getProfile","getStatusProfile","getAuthUserId","isAuth","getIsAuth","withAuthRedirect","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","to","React"],"sourceRoot":""}