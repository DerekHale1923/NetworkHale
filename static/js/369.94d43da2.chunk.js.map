{"version":3,"file":"static/js/369.94d43da2.chunk.js","mappings":"iKACA,G,QAAwE,6BAAxE,EAAgH,gC,4BCiBhH,EAfqB,SAAH,GAAiC,IAA5BA,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAASC,GAAK,YAKpCC,EAAWF,EAAKG,SAAWH,EAAKI,MAEpC,OACI,iCACI,+CAAcL,GAAWE,GAAK,IAAEI,UAAWH,EAAY,IAAMI,EAAe,MAC3EJ,IAAY,kBAAMG,UAAWC,EAAgB,UAAEN,EAAKI,MAAK,SAGtE,C,gFCfA,EAA0B,+BAA1B,EAAwE,oCAAxE,EAAuH,gCCAvH,EAAyB,4BAAzB,EAA8D,4B,mBCe9D,EAZoB,SAACH,GACjB,OACI,gBAAKI,UAAWC,EAAa,UACzB,UAAC,KAAO,CAACC,GAAI,YAAcN,EAAMO,GACxBH,UAAW,YAAU,SAARI,SAAyBH,EAAe,EAAE,EAAC,WAAC,gBAC9DI,IAAKT,EAAMU,IACXC,IAAK,UAAS,uCAI9B,ECbA,EAA2B,4BAA3B,EAAkE,4BAAlE,EAA4G,+BCgB5G,EAdkB,SAACX,GACf,OACI,iBAAKI,UAAWC,EAAe,WAC3B,iBAAKD,UAAWC,EAAe,WAC3B,gBAAKI,IAAKT,EAAMU,IAAKC,IAAK,QACzBX,EAAMY,SAEX,gBAAKR,UAAWC,EAAkB,SAC7BL,EAAMa,YAIvB,ECdA,EAA2B,0BAA3B,EAAgE,0BAAhE,EAAwG,6BCgBxG,EAdgB,SAACb,GACb,OACI,iBAAKI,UAAWC,EAAe,WAC3B,iBAAKD,UAAWC,EAAe,WAC3B,gBAAKI,IAAKT,EAAMU,IAAKC,IAAK,QACzBX,EAAMY,SAEX,gBAAKR,UAAWC,EAAkB,SAC7BL,EAAMa,YAIvB,ECdA,EAA0B,8BAA1B,EAAwE,oC,uCCMlEC,GAAcC,EAAAA,EAAAA,GAAiB,IAqBrC,GAFqBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,iBAAjBD,EAjBJ,SAAChB,GACd,OACI,gBAAKI,UAAWC,EAAoB,UAChC,kBAAMD,UAAWC,EAAea,SAAUlB,EAAMmB,aAAa,WACxDC,EAAAA,EAAAA,GAAc,WAAY,oBAAqB,CAACC,EAAAA,EAAUP,GAAcQ,EAAAA,EAAc,KAAMtB,EAAMuB,OAOnG,yCAIhB,ICYA,EA7BsB,SAACvB,GACnB,IAAMwB,EAAcxB,EAAMyB,QAAQC,KAAI,SAACC,EAAGC,GACtC,OAAO,SAAC,EAAW,CAACrB,GAAIoB,EAAEpB,GAAIG,IAAKiB,EAAEjB,KAAUkB,EACnD,IACMC,EAAc7B,EAAM8B,SAASJ,KAAI,SAACK,EAAGH,GAAK,MAClC,WAATG,EAAExB,IAEC,SAAC,EAAS,CAACM,QAASkB,EAAED,SAAUlB,KAAMmB,EAAEnB,KAAMF,IAAKqB,EAAErB,KAAUkB,IAE/D,SAAC,EAAO,CAACf,QAASkB,EAAED,SAAUlB,KAAMmB,EAAEnB,KAAMF,IAAKqB,EAAErB,KAAUkB,EAAQ,IAO7E,OACI,iBAAKxB,UAAWC,EAAc,WAC1B,gBAAKD,UAAWC,EAAmB,SAC9BmB,KAEL,gBAAKpB,UAAWC,EAAe,SAC1BwB,KAEL,SAAC,EAAY,CAACG,MAAOhC,EAAMgC,MAAOd,SAZ3B,SAACc,GACZhC,EAAMiC,iBAAiBD,EAAME,SACjC,MAaJ,E,wCC/BaC,EAAc,SAACC,GACxB,OAAOA,EAAMC,WAAWP,QAC5B,EACaQ,EAAU,SAACF,GACpB,OAAOA,EAAMC,WAAWE,cAC5B,ECMA,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KARkB,SAACC,GACnB,MAAO,CACHjB,SDToBW,ECSAM,EDRjBN,EAAMC,WAAWZ,SCSpBK,SAAUK,EAAYO,GACtBnB,KAAMe,EAAQI,IDXK,IAACN,CCa5B,GAE6B,CAACH,iBAAAA,EAAAA,IAC1BU,EAAAA,EAFJ,CAGEC,E,kJCbEC,EAA6B,SAACH,GAAK,MAAM,CACzCI,OAAQJ,EAAMK,KAAKD,OACtB,EAEYH,EAAmB,SAACK,GAAe,IACxCC,EAAiB,qGAIlB,OAJkB,8BACnB,WACI,OAAIC,KAAKlD,MAAM8C,QACR,SAACE,GAAS,UAAKE,KAAKlD,SADG,SAAC,KAAQ,CAACM,GAAI,UAEhD,KAAC,EAJkB,CAAS6C,EAAAA,WAO9B,OAAOV,EAAAA,EAAAA,IAAQI,EAARJ,CAAoCQ,EAC/C,C","sources":["webpack://igor-app/./src/Components/Common/TextareaForm.module.css?1a47","Components/Common/TextareaForm.jsx","webpack://igor-app/./src/Components/Dialogs/PanelSendMess/PanelSendMess.module.css?624e","webpack://igor-app/./src/Components/Dialogs/DialogsItem/DialogsItem.module.css?b1c6","Components/Dialogs/DialogsItem/DialogsItem.jsx","webpack://igor-app/./src/Components/Dialogs/Message/MyMessage.module.css?2d67","Components/Dialogs/Message/MyMessage.jsx","webpack://igor-app/./src/Components/Dialogs/Message/Message.module.css?687c","Components/Dialogs/Message/Message.jsx","webpack://igor-app/./src/Components/Dialogs/PanelSendMess/SendMessForm.module.css?7cf3","Components/Dialogs/PanelSendMess/SendMessForm.jsx","Components/Dialogs/PanelSendMess/PanelSendMess.jsx","Redux/DialogsSelector.js","Components/Dialogs/PanelSendMess/SuperDialogsContainer.jsx","HOC/AuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"TextareaForm_formControl__F4Fe6\",\"error\":\"TextareaForm_error__j-1+o\",\"spanError\":\"TextareaForm_spanError__M+rTe\"};","import React from \"react\";\r\nimport style from './TextareaForm.module.css'\r\n\r\nconst TextareaForm = ({input, meta, ...props}) => {\r\n    /*не работало до деструктуризации, и не выдавало никаких ошибок...деструктуризировал input и propsЫ и передал их в\r\n     textarea и щас все норм, нужно было передать их в textarea а не просто {...props}*/\r\n    {/*{...input} {...props} className={style.error + ' ' + style.error}*/\r\n    }\r\n    let hasError = meta.touched && meta.error\r\n    /*meta.error будет показывать сообщение из валидатора повешенного на форму*/\r\n    return (\r\n        <>\r\n            <textarea {...input} {...props} className={hasError ? (' ' + style.error) : ''}/>\r\n            {hasError && <span className={style.spanError}>{meta.error}*</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TextareaForm","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"PanelSendMess_dialogs__Ab778\",\"dialogsItems\":\"PanelSendMess_dialogsItems__Zlg3t\",\"messages\":\"PanelSendMess_messages__08GZ6\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogsItem_dialog__+ifj2\",\"active\":\"DialogsItem_active__AqvDs\"};","import React from 'react';\r\nimport style from './DialogsItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id}\r\n                     className={({isActive}) => isActive ? style.active : ''}><img\r\n                src={props.img}\r\n                alt={'igor'}/><span>Name</span></NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsItem;","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"MyMessage_messages__-R--l\",\"userInfo\":\"MyMessage_userInfo__yjJbJ\",\"textMessage\":\"MyMessage_textMessage__rgJIt\"};","import React from 'react';\r\nimport style from './MyMessage.module.css'\r\n\r\nconst MyMessage = (props) => {\r\n    return (\r\n        <div className={style.messages}>\r\n            <div className={style.userInfo}>\r\n                <img src={props.img} alt={'img'}/>\r\n                {props.name}\r\n            </div>\r\n            <div className={style.textMessage}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyMessage;","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Message_messages__ybfIv\",\"userInfo\":\"Message_userInfo__wUBbL\",\"textMessage\":\"Message_textMessage__pkK6k\"};","import React from 'react';\r\nimport style from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.messages}>\r\n            <div className={style.userInfo}>\r\n                <img src={props.img} alt={'img'}/>\r\n                {props.name}\r\n            </div>\r\n            <div className={style.textMessage}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SendMessForm_wrapper__AJvrt\",\"panelSendMess\":\"SendMessForm_panelSendMess__+gowc\"};","import React from 'react';\r\nimport style from './SendMessForm.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport TextareaForm from \"../../Common/TextareaForm\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/Validators\";\r\nimport {shortCutField} from \"../../Common/shortCutField\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst SendMess = (props) => {\r\n    return (\r\n        <div className={style.panelSendMess}>\r\n            <form className={style.wrapper} onSubmit={props.handleSubmit}>\r\n                {shortCutField('sendMess', 'enter you mess...', [required, maxLength50], TextareaForm, null, props.text,)}\r\n                {/*<Field component={TextareaForm}\r\n                       validate={[required, maxLength50]}\r\n                       name={'sendMess'}\r\n                       placeholder={'enter you mess...'}\r\n                       value={props.text}>\r\n                </Field>*/}\r\n                <button>Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst SendMessForm = reduxForm({form: 'PanelSendMess'})(SendMess)\r\n\r\nexport default SendMessForm;","import React from 'react';\r\nimport style from './PanelSendMess.module.css'\r\nimport DialogsItem from \"../DialogsItem/DialogsItem\";\r\nimport MyMessage from \"../Message/MyMessage\";\r\nimport Message from \"../Message/Message\";\r\nimport SendMessForm from \"./SendMessForm\";\r\n\r\nconst PanelSendMess = (props) => {\r\n    const dialogsItem = props.dialogs.map((d, index) => {\r\n        return <DialogsItem id={d.id} img={d.img} key={index}/>\r\n    })\r\n    const messageItem = props.messages.map((m, index) =>\r\n        (m.id === '000001')\r\n            ?\r\n            <MyMessage message={m.messages} name={m.name} img={m.img} key={index}/>\r\n            :\r\n            <Message message={m.messages} name={m.name} img={m.img} key={index}/>\r\n    )\r\n\r\n    let onSubmit = (value) => {\r\n        props.actionAddMessage(value.sendMess)\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsItem}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messageItem}\r\n            </div>\r\n            <SendMessForm value={props.value} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PanelSendMess;","export  const getDialogs = (state) => {\r\n    return state.dialogPage.dialogs\r\n}\r\nexport const getMessages = (state) => {\r\n    return state.dialogPage.messages\r\n}\r\nexport const getText = (state) => {\r\n    return state.dialogPage.newMessageText\r\n}","import PanelSendMess from \"./PanelSendMess\";\r\nimport {actionAddMessage} from \"../../../Redux/DialogPageReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../HOC/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogs, getMessages, getText} from \"../../../Redux/DialogsSelector\";\r\n\r\nlet mapStateToProps = (store) => {\r\n    return {\r\n        dialogs: getDialogs(store),\r\n        messages: getMessages(store),\r\n        text: getText(store),\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {actionAddMessage}),\r\n    withAuthRedirect\r\n)(PanelSendMess)","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (store) => ({\r\n    isAuth: store.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component{\r\n      render(){\r\n          if(!this.props.isAuth) return <Navigate to={'/login'}/>\r\n          return <Component {...this.props}/>\r\n      }\r\n  }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}"],"names":["input","meta","props","hasError","touched","error","className","style","to","id","isActive","src","img","alt","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","shortCutField","required","TextareaForm","text","dialogsItem","dialogs","map","d","index","messageItem","messages","m","value","actionAddMessage","sendMess","getMessages","state","dialogPage","getText","newMessageText","compose","connect","store","withAuthRedirect","PanelSendMess","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}